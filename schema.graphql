""""""
directive @defaultOverride(
  """
  List of arguments for which the defaults should be overridden. Currently only supports 'stage' and 'locales'.
  """
  args: [String!]!
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

""""""
directive @mark(
  """Marks an aggregate type"""
  aggregate: Boolean

  """Link to the Main type of the connection"""
  connection: String

  """Marks a countable type"""
  countable: Boolean

  """Specifies model create input type"""
  createInputType: String

  """Specifies model create localization type"""
  createLocalizationInputType: String

  """Specifies system createdAt field"""
  createdAtField: String

  """Marks if value is default"""
  default: Boolean

  """Marks document version field on Query"""
  documentVersion: Boolean

  """Marks an edge type"""
  edge: Boolean

  """Specifies GraphCMS field type"""
  fieldType: String

  """Marks filter and links to parent type"""
  filter: String

  """Marks if corresponding field is list"""
  filterIsList: Boolean

  """Marks filter kind"""
  filterKind: _FilterKind

  """Specifies whether type is connect input"""
  isConnectInput: Boolean

  """Marks list richText field return type"""
  isListRichText: Boolean

  """
  Specifies relation input to be for abstract member type, not known master / origin side
  """
  isMemberInput: Boolean

  """marks if field is required (non-null)"""
  isRequired: Boolean

  """Marks richText field return type"""
  isRichTextType: Boolean

  """Marks relation fields that do not have a reverse side counterpart"""
  isUnidirectional: Boolean

  """Marks a locale enum"""
  locale: Boolean

  """Marks localizations field"""
  localizations: Boolean

  """Marks if field is localized"""
  localized: Boolean

  """Specifies model a type is part of"""
  model: String

  """Marks versions field on model"""
  modelVersions: Boolean

  """Marks kind of mutation input field"""
  mutationInputFieldKind: _MutationInputFieldKind

  """Marks type of mutation kind"""
  mutationKind: _MutationKind

  """Marks order by"""
  order: Boolean

  """Marks order direction"""
  orderDirection: _OrderDirection

  """Marks the pageInfo"""
  pageInfo: Boolean

  """Specifies relation input cardinality"""
  relationInputCardinality: _RelationInputCardinality

  """Specifies relation input kind"""
  relationInputKind: _RelationInputKind

  """
  Specifies relation kind (e.g. union relation or regular field relation)
  """
  relationKind: _RelationKind

  """
  Specifies if the filter's value can be replaced by the current user's id
  """
  replaceableWithUserId: Boolean

  """Specifies relation input cardinality of reverse side"""
  reverseRelationInputCardinality: _RelationInputCardinality

  """The name of the associated RichText type"""
  richTextType: String

  """Marks stages field"""
  stages: Boolean

  """The model's storage ID"""
  storageId: String

  """Specifies mode of system DateTime fields"""
  systemDateTimeFieldVariation: _SystemDateTimeFieldVariation

  """Specifies union type name"""
  unionType: Boolean

  """Specifies system updatedAt field"""
  updatedAtField: String

  """Marks asset url handler"""
  url: Boolean

  """Adds field validations"""
  validations: String

  """
  If versioned, documents of this model will be able to hold this amount of versions per stage
  """
  versionRetentionCount: Int

  """If versioned, on publishing versions older than x days will be dropped"""
  versionRetentionPeriod: Int

  """Specifies WhereUniqueInput type name"""
  whereUniqueInput: String
) on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | OBJECT

""""""
directive @permission(
  """Policy action names."""
  actions: [String!]

  """Policy resource names."""
  resources: [String!]
) on FIELD_DEFINITION

""""""
directive @psql(
  """postgres column name"""
  column: [String!]

  """hardcoded postgres id value for enums"""
  id: String

  """Specifies column for system id field"""
  idColumn: String

  """postgres join on name"""
  join: [String!]

  """postgres localization table name"""
  localizationTable: String

  """Specifies columns for union member fields"""
  memberColumns: [String!]

  """Specifies column for native sorting for relational fields"""
  prio: String

  """postgres table name"""
  table: String

  """Specifies system updatedAt column"""
  updatedAtColumn: String
) on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | OBJECT

""""""
directive @remote(
  """optional headers that will be sent in the remote call"""
  headers: Json

  """HTTP method used to fetch the remote content from"""
  method: String!

  """
  list of field storage ids that will available for templates and parameters for the remote call
  """
  payloadFields: [String!]!

  """list of field apiIds that should be send as payload in the remote call"""
  requestParamFields: [String!]!

  """url to fetch the remote content from"""
  url: String!
) on FIELD_DEFINITION

""""""
type Aggregate {
  """"""
  count: Int!
}

"""Asset system model"""
type Asset implements Node {
  """"""
  avatarTestimonialComponent(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `avatarTestimonialComponent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    orderBy: TestimonialComponentOrderByInput

    """"""
    skip: Int

    """"""
    where: TestimonialComponentWhereInput
  ): [TestimonialComponent!]!

  """The time the document was created"""
  createdAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Asset!]!

  """The file name"""
  fileName: String!

  """The file handle"""
  handle: String!

  """The height of the file"""
  height: Float

  """List of Asset versions"""
  history(
    """"""
    limit: Int! = 10

    """"""
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """"""
  imageBannerComponent(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `imageBannerComponent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    orderBy: BannerComponentOrderByInput

    """"""
    skip: Int

    """"""
    where: BannerComponentWhereInput
  ): [BannerComponent!]!

  """System Locale field"""
  locale: Locale!

  """Get the other localizations for this document"""
  localizations(
    """Decides if the current locale should be included or not"""
    includeCurrent: Boolean! = false

    """Potential locales that should be returned"""
    locales: [Locale!]! = [en]
  ): [Asset!]!

  """The mime type of the file"""
  mimeType: String

  """The time the document was published. Null on documents in draft stage."""
  publishedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """"""
  scheduledIn(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    skip: Int

    """"""
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """The file size"""
  size: Float

  """System stage field"""
  stage: Stage!

  """The time the document was updated"""
  updatedAt(
    """
    Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
    """
    variation: SystemDateTimeFieldVariation! = COMBINED
  ): DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the url for the asset with provided transformations applied."""
  url(transformation: AssetTransformationInput): String!

  """The file width"""
  width: Float
}

""""""
input AssetConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: AssetWhereUniqueInput!
}

"""A connection to a list of items."""
type AssetConnection {
  """"""
  aggregate: Aggregate!

  """A list of edges."""
  edges: [AssetEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

""""""
input AssetCreateInput {
  """"""
  avatarTestimonialComponent: TestimonialComponentCreateManyInlineInput

  """"""
  createdAt: DateTime

  """"""
  fileName: String!

  """"""
  handle: String!

  """"""
  height: Float

  """"""
  imageBannerComponent: BannerComponentCreateManyInlineInput

  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: AssetCreateLocalizationsInput

  """"""
  mimeType: String

  """"""
  size: Float

  """"""
  updatedAt: DateTime

  """"""
  width: Float
}

""""""
input AssetCreateLocalizationDataInput {
  """"""
  createdAt: DateTime

  """"""
  fileName: String!

  """"""
  handle: String!

  """"""
  height: Float

  """"""
  mimeType: String

  """"""
  size: Float

  """"""
  updatedAt: DateTime

  """"""
  width: Float
}

""""""
input AssetCreateLocalizationInput {
  """Localization input"""
  data: AssetCreateLocalizationDataInput!

  """"""
  locale: Locale!
}

""""""
input AssetCreateLocalizationsInput {
  """Create localizations for the newly-created document"""
  create: [AssetCreateLocalizationInput!]
}

""""""
input AssetCreateManyInlineInput {
  """Connect multiple existing Asset documents"""
  connect: [AssetWhereUniqueInput!]

  """Create and connect multiple existing Asset documents"""
  create: [AssetCreateInput!]
}

""""""
input AssetCreateOneInlineInput {
  """Connect one existing Asset document"""
  connect: AssetWhereUniqueInput

  """Create and connect one Asset document"""
  create: AssetCreateInput
}

"""An edge in a connection."""
type AssetEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Asset!
}

"""Identifies documents"""
input AssetManyWhereInput {
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  avatarTestimonialComponent_every: TestimonialComponentWhereInput

  """"""
  avatarTestimonialComponent_none: TestimonialComponentWhereInput

  """"""
  avatarTestimonialComponent_some: TestimonialComponentWhereInput

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  imageBannerComponent_every: BannerComponentWhereInput

  """"""
  imageBannerComponent_none: BannerComponentWhereInput

  """"""
  imageBannerComponent_some: BannerComponentWhereInput

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  scheduledIn_every: ScheduledOperationWhereInput

  """"""
  scheduledIn_none: ScheduledOperationWhereInput

  """"""
  scheduledIn_some: ScheduledOperationWhereInput

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

""""""
enum AssetOrderByInput {
  """"""
  createdAt_ASC

  """"""
  createdAt_DESC

  """"""
  fileName_ASC

  """"""
  fileName_DESC

  """"""
  handle_ASC

  """"""
  handle_DESC

  """"""
  height_ASC

  """"""
  height_DESC

  """"""
  id_ASC

  """"""
  id_DESC

  """"""
  mimeType_ASC

  """"""
  mimeType_DESC

  """"""
  publishedAt_ASC

  """"""
  publishedAt_DESC

  """"""
  size_ASC

  """"""
  size_DESC

  """"""
  updatedAt_ASC

  """"""
  updatedAt_DESC

  """"""
  width_ASC

  """"""
  width_DESC
}

"""Transformations for Assets"""
input AssetTransformationInput {
  """"""
  document: DocumentTransformationInput

  """"""
  image: ImageTransformationInput

  """Pass true if you want to validate the passed transformation parameters"""
  validateOptions: Boolean = false
}

""""""
input AssetUpdateInput {
  """"""
  avatarTestimonialComponent: TestimonialComponentUpdateManyInlineInput

  """"""
  fileName: String

  """"""
  handle: String

  """"""
  height: Float

  """"""
  imageBannerComponent: BannerComponentUpdateManyInlineInput

  """Manage document localizations"""
  localizations: AssetUpdateLocalizationsInput

  """"""
  mimeType: String

  """"""
  size: Float

  """"""
  width: Float
}

""""""
input AssetUpdateLocalizationDataInput {
  """"""
  fileName: String

  """"""
  handle: String

  """"""
  height: Float

  """"""
  mimeType: String

  """"""
  size: Float

  """"""
  width: Float
}

""""""
input AssetUpdateLocalizationInput {
  """"""
  data: AssetUpdateLocalizationDataInput!

  """"""
  locale: Locale!
}

""""""
input AssetUpdateLocalizationsInput {
  """Localizations to create"""
  create: [AssetCreateLocalizationInput!]

  """Localizations to delete"""
  delete: [Locale!]

  """Localizations to update"""
  update: [AssetUpdateLocalizationInput!]

  """"""
  upsert: [AssetUpsertLocalizationInput!]
}

""""""
input AssetUpdateManyInlineInput {
  """Connect multiple existing Asset documents"""
  connect: [AssetConnectInput!]

  """Create and connect multiple Asset documents"""
  create: [AssetCreateInput!]

  """Delete multiple Asset documents"""
  delete: [AssetWhereUniqueInput!]

  """Disconnect multiple Asset documents"""
  disconnect: [AssetWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Asset documents
  """
  set: [AssetWhereUniqueInput!]

  """Update multiple Asset documents"""
  update: [AssetUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Asset documents"""
  upsert: [AssetUpsertWithNestedWhereUniqueInput!]
}

""""""
input AssetUpdateManyInput {
  """"""
  fileName: String

  """"""
  height: Float

  """Optional updates to localizations"""
  localizations: AssetUpdateManyLocalizationsInput

  """"""
  mimeType: String

  """"""
  size: Float

  """"""
  width: Float
}

""""""
input AssetUpdateManyLocalizationDataInput {
  """"""
  fileName: String

  """"""
  height: Float

  """"""
  mimeType: String

  """"""
  size: Float

  """"""
  width: Float
}

""""""
input AssetUpdateManyLocalizationInput {
  """"""
  data: AssetUpdateManyLocalizationDataInput!

  """"""
  locale: Locale!
}

""""""
input AssetUpdateManyLocalizationsInput {
  """Localizations to update"""
  update: [AssetUpdateManyLocalizationInput!]
}

""""""
input AssetUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: AssetUpdateManyInput!

  """Document search"""
  where: AssetWhereInput!
}

""""""
input AssetUpdateOneInlineInput {
  """Connect existing Asset document"""
  connect: AssetWhereUniqueInput

  """Create and connect one Asset document"""
  create: AssetCreateInput

  """Delete currently connected Asset document"""
  delete: Boolean

  """Disconnect currently connected Asset document"""
  disconnect: Boolean

  """Update single Asset document"""
  update: AssetUpdateWithNestedWhereUniqueInput

  """Upsert single Asset document"""
  upsert: AssetUpsertWithNestedWhereUniqueInput
}

""""""
input AssetUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: AssetUpdateInput!

  """Unique document search"""
  where: AssetWhereUniqueInput!
}

""""""
input AssetUpsertInput {
  """Create document if it didn't exist"""
  create: AssetCreateInput!

  """Update document if it exists"""
  update: AssetUpdateInput!
}

""""""
input AssetUpsertLocalizationInput {
  """"""
  create: AssetCreateLocalizationDataInput!

  """"""
  locale: Locale!

  """"""
  update: AssetUpdateLocalizationDataInput!
}

""""""
input AssetUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: AssetUpsertInput!

  """Unique document search"""
  where: AssetWhereUniqueInput!
}

"""Identifies documents"""
input AssetWhereInput {
  """Logical AND on all given filters."""
  AND: [AssetWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AssetWhereInput!]

  """Logical OR on all given filters."""
  OR: [AssetWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  avatarTestimonialComponent_every: TestimonialComponentWhereInput

  """"""
  avatarTestimonialComponent_none: TestimonialComponentWhereInput

  """"""
  avatarTestimonialComponent_some: TestimonialComponentWhereInput

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  fileName: String

  """All values containing the given string."""
  fileName_contains: String

  """All values ending with the given string."""
  fileName_ends_with: String

  """All values that are contained in given list."""
  fileName_in: [String!]

  """All values that are not equal to given value."""
  fileName_not: String

  """All values not containing the given string."""
  fileName_not_contains: String

  """All values not ending with the given string"""
  fileName_not_ends_with: String

  """All values that are not contained in given list."""
  fileName_not_in: [String!]

  """All values not starting with the given string."""
  fileName_not_starts_with: String

  """All values starting with the given string."""
  fileName_starts_with: String

  """"""
  handle: String

  """All values containing the given string."""
  handle_contains: String

  """All values ending with the given string."""
  handle_ends_with: String

  """All values that are contained in given list."""
  handle_in: [String!]

  """All values that are not equal to given value."""
  handle_not: String

  """All values not containing the given string."""
  handle_not_contains: String

  """All values not ending with the given string"""
  handle_not_ends_with: String

  """All values that are not contained in given list."""
  handle_not_in: [String!]

  """All values not starting with the given string."""
  handle_not_starts_with: String

  """All values starting with the given string."""
  handle_starts_with: String

  """"""
  height: Float

  """All values greater than the given value."""
  height_gt: Float

  """All values greater than or equal the given value."""
  height_gte: Float

  """All values that are contained in given list."""
  height_in: [Float!]

  """All values less than the given value."""
  height_lt: Float

  """All values less than or equal the given value."""
  height_lte: Float

  """All values that are not equal to given value."""
  height_not: Float

  """All values that are not contained in given list."""
  height_not_in: [Float!]

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  imageBannerComponent_every: BannerComponentWhereInput

  """"""
  imageBannerComponent_none: BannerComponentWhereInput

  """"""
  imageBannerComponent_some: BannerComponentWhereInput

  """"""
  mimeType: String

  """All values containing the given string."""
  mimeType_contains: String

  """All values ending with the given string."""
  mimeType_ends_with: String

  """All values that are contained in given list."""
  mimeType_in: [String!]

  """All values that are not equal to given value."""
  mimeType_not: String

  """All values not containing the given string."""
  mimeType_not_contains: String

  """All values not ending with the given string"""
  mimeType_not_ends_with: String

  """All values that are not contained in given list."""
  mimeType_not_in: [String!]

  """All values not starting with the given string."""
  mimeType_not_starts_with: String

  """All values starting with the given string."""
  mimeType_starts_with: String

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  scheduledIn_every: ScheduledOperationWhereInput

  """"""
  scheduledIn_none: ScheduledOperationWhereInput

  """"""
  scheduledIn_some: ScheduledOperationWhereInput

  """"""
  size: Float

  """All values greater than the given value."""
  size_gt: Float

  """All values greater than or equal the given value."""
  size_gte: Float

  """All values that are contained in given list."""
  size_in: [Float!]

  """All values less than the given value."""
  size_lt: Float

  """All values less than or equal the given value."""
  size_lte: Float

  """All values that are not equal to given value."""
  size_not: Float

  """All values that are not contained in given list."""
  size_not_in: [Float!]

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput

  """"""
  width: Float

  """All values greater than the given value."""
  width_gt: Float

  """All values greater than or equal the given value."""
  width_gte: Float

  """All values that are contained in given list."""
  width_in: [Float!]

  """All values less than the given value."""
  width_lt: Float

  """All values less than or equal the given value."""
  width_lte: Float

  """All values that are not equal to given value."""
  width_not: Float

  """All values that are not contained in given list."""
  width_not_in: [Float!]
}

"""References Asset record uniquely"""
input AssetWhereUniqueInput {
  """"""
  id: ID
}

""""""
type BannerComponent implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [BannerComponent!]!

  """List of BannerComponent versions"""
  history(
    """"""
    limit: Int! = 10

    """"""
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """"""
  image(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `image` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """"""
  scheduledIn(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    skip: Int

    """"""
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """"""
  slots(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `slots` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    skip: Int

    """"""
    where: SlotWhereInput
  ): [Slot!]!

  """System stage field"""
  stage: Stage!

  """"""
  subtitle: String

  """"""
  title: String

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

""""""
input BannerComponentConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: BannerComponentWhereUniqueInput!
}

"""A connection to a list of items."""
type BannerComponentConnection {
  """"""
  aggregate: Aggregate!

  """A list of edges."""
  edges: [BannerComponentEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

""""""
input BannerComponentCreateInput {
  """"""
  createdAt: DateTime

  """"""
  image: AssetCreateOneInlineInput

  """"""
  slots: SlotCreateManyInlineInput

  """"""
  subtitle: String

  """"""
  title: String

  """"""
  updatedAt: DateTime
}

""""""
input BannerComponentCreateManyInlineInput {
  """Connect multiple existing BannerComponent documents"""
  connect: [BannerComponentWhereUniqueInput!]

  """Create and connect multiple existing BannerComponent documents"""
  create: [BannerComponentCreateInput!]
}

""""""
input BannerComponentCreateOneInlineInput {
  """Connect one existing BannerComponent document"""
  connect: BannerComponentWhereUniqueInput

  """Create and connect one BannerComponent document"""
  create: BannerComponentCreateInput
}

"""An edge in a connection."""
type BannerComponentEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: BannerComponent!
}

"""Identifies documents"""
input BannerComponentManyWhereInput {
  """Logical AND on all given filters."""
  AND: [BannerComponentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [BannerComponentWhereInput!]

  """Logical OR on all given filters."""
  OR: [BannerComponentWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  image: AssetWhereInput

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  scheduledIn_every: ScheduledOperationWhereInput

  """"""
  scheduledIn_none: ScheduledOperationWhereInput

  """"""
  scheduledIn_some: ScheduledOperationWhereInput

  """"""
  slots_every: SlotWhereInput

  """"""
  slots_none: SlotWhereInput

  """"""
  slots_some: SlotWhereInput

  """"""
  subtitle: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values not ending with the given string"""
  subtitle_not_ends_with: String

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """"""
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

""""""
enum BannerComponentOrderByInput {
  """"""
  createdAt_ASC

  """"""
  createdAt_DESC

  """"""
  id_ASC

  """"""
  id_DESC

  """"""
  publishedAt_ASC

  """"""
  publishedAt_DESC

  """"""
  subtitle_ASC

  """"""
  subtitle_DESC

  """"""
  title_ASC

  """"""
  title_DESC

  """"""
  updatedAt_ASC

  """"""
  updatedAt_DESC
}

""""""
input BannerComponentUpdateInput {
  """"""
  image: AssetUpdateOneInlineInput

  """"""
  slots: SlotUpdateManyInlineInput

  """"""
  subtitle: String

  """"""
  title: String
}

""""""
input BannerComponentUpdateManyInlineInput {
  """Connect multiple existing BannerComponent documents"""
  connect: [BannerComponentConnectInput!]

  """Create and connect multiple BannerComponent documents"""
  create: [BannerComponentCreateInput!]

  """Delete multiple BannerComponent documents"""
  delete: [BannerComponentWhereUniqueInput!]

  """Disconnect multiple BannerComponent documents"""
  disconnect: [BannerComponentWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing BannerComponent documents
  """
  set: [BannerComponentWhereUniqueInput!]

  """Update multiple BannerComponent documents"""
  update: [BannerComponentUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple BannerComponent documents"""
  upsert: [BannerComponentUpsertWithNestedWhereUniqueInput!]
}

""""""
input BannerComponentUpdateManyInput {
  """"""
  subtitle: String

  """"""
  title: String
}

""""""
input BannerComponentUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: BannerComponentUpdateManyInput!

  """Document search"""
  where: BannerComponentWhereInput!
}

""""""
input BannerComponentUpdateOneInlineInput {
  """Connect existing BannerComponent document"""
  connect: BannerComponentWhereUniqueInput

  """Create and connect one BannerComponent document"""
  create: BannerComponentCreateInput

  """Delete currently connected BannerComponent document"""
  delete: Boolean

  """Disconnect currently connected BannerComponent document"""
  disconnect: Boolean

  """Update single BannerComponent document"""
  update: BannerComponentUpdateWithNestedWhereUniqueInput

  """Upsert single BannerComponent document"""
  upsert: BannerComponentUpsertWithNestedWhereUniqueInput
}

""""""
input BannerComponentUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: BannerComponentUpdateInput!

  """Unique document search"""
  where: BannerComponentWhereUniqueInput!
}

""""""
input BannerComponentUpsertInput {
  """Create document if it didn't exist"""
  create: BannerComponentCreateInput!

  """Update document if it exists"""
  update: BannerComponentUpdateInput!
}

""""""
input BannerComponentUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: BannerComponentUpsertInput!

  """Unique document search"""
  where: BannerComponentWhereUniqueInput!
}

"""Identifies documents"""
input BannerComponentWhereInput {
  """Logical AND on all given filters."""
  AND: [BannerComponentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [BannerComponentWhereInput!]

  """Logical OR on all given filters."""
  OR: [BannerComponentWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  image: AssetWhereInput

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  scheduledIn_every: ScheduledOperationWhereInput

  """"""
  scheduledIn_none: ScheduledOperationWhereInput

  """"""
  scheduledIn_some: ScheduledOperationWhereInput

  """"""
  slots_every: SlotWhereInput

  """"""
  slots_none: SlotWhereInput

  """"""
  slots_some: SlotWhereInput

  """"""
  subtitle: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values not ending with the given string"""
  subtitle_not_ends_with: String

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """"""
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

"""References BannerComponent record uniquely"""
input BannerComponentWhereUniqueInput {
  """"""
  id: ID
}

""""""
type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type Color {
  """"""
  css: String!

  """"""
  hex: Hex!

  """"""
  rgba: RGBA!
}

"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input ColorInput {
  """"""
  hex: Hex

  """"""
  rgba: RGBAInput
}

""""""
input ConnectPositionInput {
  """Connect document after specified document"""
  after: ID

  """Connect document before specified document"""
  before: ID

  """Connect document at last position"""
  end: Boolean

  """Connect document at first position"""
  start: Boolean
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

""""""
enum DocumentFileTypes {
  """"""
  doc

  """"""
  docx

  """"""
  html

  """"""
  jpg

  """"""
  odp

  """"""
  ods

  """"""
  odt

  """"""
  pdf

  """"""
  png

  """"""
  ppt

  """"""
  pptx

  """"""
  svg

  """"""
  txt

  """"""
  webp

  """"""
  xls

  """"""
  xlsx
}

""""""
input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:
  
  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"""Transformations for Documents"""
input DocumentTransformationInput {
  """Changes the output for the file."""
  output: DocumentOutputInput
}

""""""
type DocumentVersion {
  """"""
  createdAt: DateTime!

  """"""
  data: Json

  """"""
  id: ID!

  """"""
  revision: Int!

  """"""
  stage: Stage!
}

""""""
scalar Hex

""""""
enum ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip

  """
  Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
  """
  crop

  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.
  """
  max

  """
  Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
  """
  scale
}

""""""
input ImageResizeInput {
  """The default value for the fit parameter is fit:clip."""
  fit: ImageFit

  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int

  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int
}

"""Transformations for Images"""
input ImageTransformationInput {
  """Resizes the image"""
  resize: ImageResizeInput
}

"""Raw JSON value"""
scalar Json

"""Locale system enumeration"""
enum Locale {
  """System locale"""
  en
}

"""Representing a geolocation point with latitude and longitude"""
type Location {
  """"""
  distance(from: LocationInput!): Float!

  """"""
  latitude: Float!

  """"""
  longitude: Float!
}

"""Input for a geolocation point with latitude and longitude"""
input LocationInput {
  """"""
  latitude: Float!

  """"""
  longitude: Float!
}

"""
The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

""""""
type Mutation {
  """Create one asset"""
  createAsset(data: AssetCreateInput!): Asset @deprecated(reason: "Asset mutations will be overhauled soon")

  """Create one bannerComponent"""
  createBannerComponent(data: BannerComponentCreateInput!): BannerComponent

  """Create one scheduledRelease"""
  createScheduledRelease(data: ScheduledReleaseCreateInput!): ScheduledRelease

  """Create one slot"""
  createSlot(data: SlotCreateInput!): Slot

  """Create one testimonialComponent"""
  createTestimonialComponent(data: TestimonialComponentCreateInput!): TestimonialComponent

  """Create one textComponent"""
  createTextComponent(data: TextComponentCreateInput!): TextComponent

  """Delete one asset from _all_ existing stages. Returns deleted document."""
  deleteAsset(
    """Document to delete"""
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Delete one bannerComponent from _all_ existing stages. Returns deleted document.
  """
  deleteBannerComponent(
    """Document to delete"""
    where: BannerComponentWhereUniqueInput!
  ): BannerComponent

  """Delete many Asset documents"""
  deleteManyAssets(
    """Documents to delete"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyAssetsConnection)")

  """Delete many Asset documents, return deleted documents"""
  deleteManyAssetsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """"""
    last: Int

    """"""
    skip: Int

    """Documents to delete"""
    where: AssetManyWhereInput
  ): AssetConnection!

  """Delete many BannerComponent documents"""
  deleteManyBannerComponents(
    """Documents to delete"""
    where: BannerComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyBannerComponentsConnection)")

  """Delete many BannerComponent documents, return deleted documents"""
  deleteManyBannerComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """"""
    last: Int

    """"""
    skip: Int

    """Documents to delete"""
    where: BannerComponentManyWhereInput
  ): BannerComponentConnection!

  """Delete many Slot documents"""
  deleteManySlots(
    """Documents to delete"""
    where: SlotManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManySlotsConnection)")

  """Delete many Slot documents, return deleted documents"""
  deleteManySlotsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """"""
    last: Int

    """"""
    skip: Int

    """Documents to delete"""
    where: SlotManyWhereInput
  ): SlotConnection!

  """Delete many TestimonialComponent documents"""
  deleteManyTestimonialComponents(
    """Documents to delete"""
    where: TestimonialComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyTestimonialComponentsConnection)")

  """Delete many TestimonialComponent documents, return deleted documents"""
  deleteManyTestimonialComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """"""
    last: Int

    """"""
    skip: Int

    """Documents to delete"""
    where: TestimonialComponentManyWhereInput
  ): TestimonialComponentConnection!

  """Delete many TextComponent documents"""
  deleteManyTextComponents(
    """Documents to delete"""
    where: TextComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (deleteManyTextComponentsConnection)")

  """Delete many TextComponent documents, return deleted documents"""
  deleteManyTextComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """"""
    last: Int

    """"""
    skip: Int

    """Documents to delete"""
    where: TextComponentManyWhereInput
  ): TextComponentConnection!

  """Delete and return scheduled operation"""
  deleteScheduledOperation(
    """Document to delete"""
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation

  """
  Delete one scheduledRelease from _all_ existing stages. Returns deleted document.
  """
  deleteScheduledRelease(
    """Document to delete"""
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """Delete one slot from _all_ existing stages. Returns deleted document."""
  deleteSlot(
    """Document to delete"""
    where: SlotWhereUniqueInput!
  ): Slot

  """
  Delete one testimonialComponent from _all_ existing stages. Returns deleted document.
  """
  deleteTestimonialComponent(
    """Document to delete"""
    where: TestimonialComponentWhereUniqueInput!
  ): TestimonialComponent

  """
  Delete one textComponent from _all_ existing stages. Returns deleted document.
  """
  deleteTextComponent(
    """Document to delete"""
    where: TextComponentWhereUniqueInput!
  ): TextComponent

  """Publish one asset"""
  publishAsset(
    """Optional localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: AssetWhereUniqueInput!

    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Asset

  """Publish one bannerComponent"""
  publishBannerComponent(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: BannerComponentWhereUniqueInput!
  ): BannerComponent

  """Publish many Asset documents"""
  publishManyAssets(
    """Document localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: AssetManyWhereInput

    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyAssetsConnection)")

  """Publish many Asset documents"""
  publishManyAssetsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT

    """"""
    last: Int

    """Document localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """"""
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: AssetManyWhereInput

    """Whether to include the default locale when publishBase is true"""
    withDefaultLocale: Boolean = true
  ): AssetConnection!

  """Publish many BannerComponent documents"""
  publishManyBannerComponents(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: BannerComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyBannerComponentsConnection)")

  """Publish many BannerComponent documents"""
  publishManyBannerComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT

    """"""
    last: Int

    """"""
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: BannerComponentManyWhereInput
  ): BannerComponentConnection!

  """Publish many Slot documents"""
  publishManySlots(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: SlotManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManySlotsConnection)")

  """Publish many Slot documents"""
  publishManySlotsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT

    """"""
    last: Int

    """"""
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: SlotManyWhereInput
  ): SlotConnection!

  """Publish many TestimonialComponent documents"""
  publishManyTestimonialComponents(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: TestimonialComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyTestimonialComponentsConnection)")

  """Publish many TestimonialComponent documents"""
  publishManyTestimonialComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT

    """"""
    last: Int

    """"""
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: TestimonialComponentManyWhereInput
  ): TestimonialComponentConnection!

  """Publish many TextComponent documents"""
  publishManyTextComponents(
    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: TextComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (publishManyTextComponentsConnection)")

  """Publish many TextComponent documents"""
  publishManyTextComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """Stage to find matching documents in"""
    from: Stage = DRAFT

    """"""
    last: Int

    """"""
    skip: Int

    """Stages to publish documents to"""
    to: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage to be published"""
    where: TextComponentManyWhereInput
  ): TextComponentConnection!

  """Publish one slot"""
  publishSlot(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: SlotWhereUniqueInput!
  ): Slot

  """Publish one testimonialComponent"""
  publishTestimonialComponent(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: TestimonialComponentWhereUniqueInput!
  ): TestimonialComponent

  """Publish one textComponent"""
  publishTextComponent(
    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: TextComponentWhereUniqueInput!
  ): TextComponent

  """Schedule to publish one asset"""
  schedulePublishAsset(
    """Optional localizations to publish"""
    locales: [Locale!]

    """Whether to publish the base document"""
    publishBase: Boolean = true

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: AssetWhereUniqueInput!

    """Whether to include the default locale when publishBase is set"""
    withDefaultLocale: Boolean = true
  ): Asset

  """Schedule to publish one bannerComponent"""
  schedulePublishBannerComponent(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: BannerComponentWhereUniqueInput!
  ): BannerComponent

  """Schedule to publish one slot"""
  schedulePublishSlot(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: SlotWhereUniqueInput!
  ): Slot

  """Schedule to publish one testimonialComponent"""
  schedulePublishTestimonialComponent(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: TestimonialComponentWhereUniqueInput!
  ): TestimonialComponent

  """Schedule to publish one textComponent"""
  schedulePublishTextComponent(
    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Publishing target stage"""
    to: [Stage!]! = [PUBLISHED]

    """Document to publish"""
    where: TextComponentWhereUniqueInput!
  ): TextComponent

  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishAsset(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """Document to unpublish"""
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Unpublish one bannerComponent from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishBannerComponent(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Document to unpublish"""
    where: BannerComponentWhereUniqueInput!
  ): BannerComponent

  """
  Unpublish one slot from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishSlot(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Document to unpublish"""
    where: SlotWhereUniqueInput!
  ): Slot

  """
  Unpublish one testimonialComponent from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishTestimonialComponent(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Document to unpublish"""
    where: TestimonialComponentWhereUniqueInput!
  ): TestimonialComponent

  """
  Unpublish one textComponent from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  scheduleUnpublishTextComponent(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Release at point in time, will create new release containing this operation
    """
    releaseAt: DateTime

    """Optionally attach this scheduled operation to an existing release"""
    releaseId: String

    """Document to unpublish"""
    where: TextComponentWhereUniqueInput!
  ): TextComponent

  """
  Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishAsset(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """
    Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
    """
    locales: [Locale!]

    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true

    """Document to unpublish"""
    where: AssetWhereUniqueInput!
  ): Asset

  """
  Unpublish one bannerComponent from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishBannerComponent(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """Document to unpublish"""
    where: BannerComponentWhereUniqueInput!
  ): BannerComponent

  """Unpublish many Asset documents"""
  unpublishManyAssets(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Locales to unpublish"""
    locales: [Locale!]

    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true

    """Identifies documents in each stage"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyAssetsConnection)")

  """
  Find many Asset documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyAssetsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """"""
    last: Int

    """Locales to unpublish"""
    locales: [Locale!]

    """"""
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Whether to unpublish the base document and default localization"""
    unpublishBase: Boolean = true

    """Identifies documents in draft stage"""
    where: AssetManyWhereInput
  ): AssetConnection!

  """Unpublish many BannerComponent documents"""
  unpublishManyBannerComponents(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage"""
    where: BannerComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyBannerComponentsConnection)")

  """
  Find many BannerComponent documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyBannerComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """"""
    last: Int

    """"""
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Identifies documents in draft stage"""
    where: BannerComponentManyWhereInput
  ): BannerComponentConnection!

  """Unpublish many Slot documents"""
  unpublishManySlots(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage"""
    where: SlotManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManySlotsConnection)")

  """
  Find many Slot documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManySlotsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """"""
    last: Int

    """"""
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Identifies documents in draft stage"""
    where: SlotManyWhereInput
  ): SlotConnection!

  """Unpublish many TestimonialComponent documents"""
  unpublishManyTestimonialComponents(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage"""
    where: TestimonialComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyTestimonialComponentsConnection)")

  """
  Find many TestimonialComponent documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyTestimonialComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """"""
    last: Int

    """"""
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Identifies documents in draft stage"""
    where: TestimonialComponentManyWhereInput
  ): TestimonialComponentConnection!

  """Unpublish many TextComponent documents"""
  unpublishManyTextComponents(
    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """Identifies documents in each stage"""
    where: TextComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (unpublishManyTextComponentsConnection)")

  """
  Find many TextComponent documents that match criteria in specified stage and unpublish from target stages
  """
  unpublishManyTextComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """"""
    first: Int

    """Stages to unpublish documents from"""
    from: [Stage!]! = [PUBLISHED]

    """"""
    last: Int

    """"""
    skip: Int

    """Stage to find matching documents in"""
    stage: Stage = DRAFT

    """Identifies documents in draft stage"""
    where: TextComponentManyWhereInput
  ): TextComponentConnection!

  """
  Unpublish one slot from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishSlot(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """Document to unpublish"""
    where: SlotWhereUniqueInput!
  ): Slot

  """
  Unpublish one testimonialComponent from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishTestimonialComponent(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """Document to unpublish"""
    where: TestimonialComponentWhereUniqueInput!
  ): TestimonialComponent

  """
  Unpublish one textComponent from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
  """
  unpublishTextComponent(
    """Stages to unpublish document from"""
    from: [Stage!]! = [PUBLISHED]

    """Document to unpublish"""
    where: TextComponentWhereUniqueInput!
  ): TextComponent

  """Update one asset"""
  updateAsset(data: AssetUpdateInput!, where: AssetWhereUniqueInput!): Asset

  """Update one bannerComponent"""
  updateBannerComponent(data: BannerComponentUpdateInput!, where: BannerComponentWhereUniqueInput!): BannerComponent

  """Update many assets"""
  updateManyAssets(
    """Updates to document content"""
    data: AssetUpdateManyInput!

    """Documents to apply update on"""
    where: AssetManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyAssetsConnection)")

  """Update many Asset documents"""
  updateManyAssetsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """Updates to document content"""
    data: AssetUpdateManyInput!

    """"""
    first: Int

    """"""
    last: Int

    """"""
    skip: Int

    """Documents to apply update on"""
    where: AssetManyWhereInput
  ): AssetConnection!

  """Update many bannerComponents"""
  updateManyBannerComponents(
    """Updates to document content"""
    data: BannerComponentUpdateManyInput!

    """Documents to apply update on"""
    where: BannerComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyBannerComponentsConnection)")

  """Update many BannerComponent documents"""
  updateManyBannerComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """Updates to document content"""
    data: BannerComponentUpdateManyInput!

    """"""
    first: Int

    """"""
    last: Int

    """"""
    skip: Int

    """Documents to apply update on"""
    where: BannerComponentManyWhereInput
  ): BannerComponentConnection!

  """Update many slots"""
  updateManySlots(
    """Updates to document content"""
    data: SlotUpdateManyInput!

    """Documents to apply update on"""
    where: SlotManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManySlotsConnection)")

  """Update many Slot documents"""
  updateManySlotsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """Updates to document content"""
    data: SlotUpdateManyInput!

    """"""
    first: Int

    """"""
    last: Int

    """"""
    skip: Int

    """Documents to apply update on"""
    where: SlotManyWhereInput
  ): SlotConnection!

  """Update many testimonialComponents"""
  updateManyTestimonialComponents(
    """Updates to document content"""
    data: TestimonialComponentUpdateManyInput!

    """Documents to apply update on"""
    where: TestimonialComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyTestimonialComponentsConnection)")

  """Update many TestimonialComponent documents"""
  updateManyTestimonialComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """Updates to document content"""
    data: TestimonialComponentUpdateManyInput!

    """"""
    first: Int

    """"""
    last: Int

    """"""
    skip: Int

    """Documents to apply update on"""
    where: TestimonialComponentManyWhereInput
  ): TestimonialComponentConnection!

  """Update many textComponents"""
  updateManyTextComponents(
    """Updates to document content"""
    data: TextComponentUpdateManyInput!

    """Documents to apply update on"""
    where: TextComponentManyWhereInput
  ): BatchPayload! @deprecated(reason: "Please use the new paginated many mutation (updateManyTextComponentsConnection)")

  """Update many TextComponent documents"""
  updateManyTextComponentsConnection(
    """"""
    after: ID

    """"""
    before: ID

    """Updates to document content"""
    data: TextComponentUpdateManyInput!

    """"""
    first: Int

    """"""
    last: Int

    """"""
    skip: Int

    """Documents to apply update on"""
    where: TextComponentManyWhereInput
  ): TextComponentConnection!

  """Update one scheduledRelease"""
  updateScheduledRelease(data: ScheduledReleaseUpdateInput!, where: ScheduledReleaseWhereUniqueInput!): ScheduledRelease

  """Update one slot"""
  updateSlot(data: SlotUpdateInput!, where: SlotWhereUniqueInput!): Slot

  """Update one testimonialComponent"""
  updateTestimonialComponent(data: TestimonialComponentUpdateInput!, where: TestimonialComponentWhereUniqueInput!): TestimonialComponent

  """Update one textComponent"""
  updateTextComponent(data: TextComponentUpdateInput!, where: TextComponentWhereUniqueInput!): TextComponent

  """Upsert one asset"""
  upsertAsset(upsert: AssetUpsertInput!, where: AssetWhereUniqueInput!): Asset

  """Upsert one bannerComponent"""
  upsertBannerComponent(upsert: BannerComponentUpsertInput!, where: BannerComponentWhereUniqueInput!): BannerComponent

  """Upsert one slot"""
  upsertSlot(upsert: SlotUpsertInput!, where: SlotWhereUniqueInput!): Slot

  """Upsert one testimonialComponent"""
  upsertTestimonialComponent(upsert: TestimonialComponentUpsertInput!, where: TestimonialComponentWhereUniqueInput!): TestimonialComponent

  """Upsert one textComponent"""
  upsertTextComponent(upsert: TextComponentUpsertInput!, where: TextComponentWhereUniqueInput!): TextComponent
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!

  """The Stage of an object"""
  stage: Stage!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """Number of items in the current page."""
  pageSize: Int

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

""""""
input PublishLocaleInput {
  """Locales to publish"""
  locale: Locale!

  """Stages to publish selected locales to"""
  stages: [Stage!]!
}

""""""
type Query {
  """Retrieve a single asset"""
  asset(
    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: AssetWhereUniqueInput!
  ): Asset

  """Retrieve document version"""
  assetVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple assets"""
  assets(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: AssetOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: AssetWhereInput
  ): [Asset!]!

  """Retrieve multiple assets using the Relay connection interface"""
  assetsConnection(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
    The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: AssetOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: AssetWhereInput
  ): AssetConnection!

  """Retrieve a single bannerComponent"""
  bannerComponent(
    """
    Defines which locales should be returned.
    
    Note that `BannerComponent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: BannerComponentWhereUniqueInput!
  ): BannerComponent

  """Retrieve document version"""
  bannerComponentVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple bannerComponents"""
  bannerComponents(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `BannerComponent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: BannerComponentOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: BannerComponentWhereInput
  ): [BannerComponent!]!

  """
  Retrieve multiple bannerComponents using the Relay connection interface
  """
  bannerComponentsConnection(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `BannerComponent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: BannerComponentOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: BannerComponentWhereInput
  ): BannerComponentConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!

    """
    Defines which locales should be returned.
    
    Note that `Node` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    stage: Stage! = PUBLISHED
  ): Node

  """Retrieve a single scheduledOperation"""
  scheduledOperation(
    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: ScheduledOperationWhereUniqueInput!
  ): ScheduledOperation

  """Retrieve multiple scheduledOperations"""
  scheduledOperations(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: ScheduledOperationOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """
  Retrieve multiple scheduledOperations using the Relay connection interface
  """
  scheduledOperationsConnection(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: ScheduledOperationOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: ScheduledOperationWhereInput
  ): ScheduledOperationConnection!

  """Retrieve a single scheduledRelease"""
  scheduledRelease(
    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: ScheduledReleaseWhereUniqueInput!
  ): ScheduledRelease

  """Retrieve multiple scheduledReleases"""
  scheduledReleases(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: ScheduledReleaseOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: ScheduledReleaseWhereInput
  ): [ScheduledRelease!]!

  """
  Retrieve multiple scheduledReleases using the Relay connection interface
  """
  scheduledReleasesConnection(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: ScheduledReleaseOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: ScheduledReleaseWhereInput
  ): ScheduledReleaseConnection!

  """Retrieve a single slot"""
  slot(
    """
    Defines which locales should be returned.
    
    Note that `Slot` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: SlotWhereUniqueInput!
  ): Slot

  """Retrieve document version"""
  slotVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple slots"""
  slots(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Slot` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: SlotOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: SlotWhereInput
  ): [Slot!]!

  """Retrieve multiple slots using the Relay connection interface"""
  slotsConnection(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `Slot` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: SlotOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: SlotWhereInput
  ): SlotConnection!

  """Retrieve a single testimonialComponent"""
  testimonialComponent(
    """
    Defines which locales should be returned.
    
    Note that `TestimonialComponent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: TestimonialComponentWhereUniqueInput!
  ): TestimonialComponent

  """Retrieve document version"""
  testimonialComponentVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple testimonialComponents"""
  testimonialComponents(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `TestimonialComponent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: TestimonialComponentOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: TestimonialComponentWhereInput
  ): [TestimonialComponent!]!

  """
  Retrieve multiple testimonialComponents using the Relay connection interface
  """
  testimonialComponentsConnection(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `TestimonialComponent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: TestimonialComponentOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: TestimonialComponentWhereInput
  ): TestimonialComponentConnection!

  """Retrieve a single textComponent"""
  textComponent(
    """
    Defines which locales should be returned.
    
    Note that `TextComponent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: TextComponentWhereUniqueInput!
  ): TextComponent

  """Retrieve document version"""
  textComponentVersion(where: VersionWhereInput!): DocumentVersion

  """Retrieve multiple textComponents"""
  textComponents(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `TextComponent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: TextComponentOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: TextComponentWhereInput
  ): [TextComponent!]!

  """Retrieve multiple textComponents using the Relay connection interface"""
  textComponentsConnection(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `TextComponent` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: TextComponentOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: TextComponentWhereInput
  ): TextComponentConnection!

  """Retrieve a single user"""
  user(
    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: UserWhereUniqueInput!
  ): User

  """Retrieve multiple users"""
  users(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: UserOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: UserWhereInput
  ): [User!]!

  """Retrieve multiple users using the Relay connection interface"""
  usersConnection(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Defines which locales should be returned.
    
    Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
    """
    locales: [Locale!]! = [en]

    """"""
    orderBy: UserOrderByInput

    """"""
    skip: Int

    """"""
    stage: Stage! = PUBLISHED

    """"""
    where: UserWhereInput
  ): UserConnection!
}

"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
  """"""
  a: RGBATransparency!

  """"""
  b: RGBAHue!

  """"""
  g: RGBAHue!

  """"""
  r: RGBAHue!
}

""""""
scalar RGBAHue

"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input RGBAInput {
  """"""
  a: RGBATransparency!

  """"""
  b: RGBAHue!

  """"""
  g: RGBAHue!

  """"""
  r: RGBAHue!
}

""""""
scalar RGBATransparency

"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type RichText {
  """Returns HTMl representation"""
  html: String!

  """Returns Markdown representation"""
  markdown: String!

  """Returns AST representation"""
  raw: RichTextAST!

  """Returns plain-text contents of RichText"""
  text: String!
}

"""Slate-compatible RichText AST"""
scalar RichTextAST

"""Scheduled Operation system model"""
type ScheduledOperation implements Node {
  """"""
  affectedDocuments(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    skip: Int
  ): [ScheduledOperationAffectedDocument!]!

  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Operation description"""
  description: String

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ScheduledOperation!]!

  """Operation error message"""
  errorMessage: String

  """The unique identifier"""
  id: ID!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """
  Raw operation payload including all details, this field is subject to change
  """
  rawPayload: Json!

  """The release this operation is scheduled for"""
  release(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): ScheduledRelease

  """System stage field"""
  stage: Stage!

  """operation Status"""
  status: ScheduledOperationStatus!

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

""""""
union ScheduledOperationAffectedDocument = Asset | BannerComponent | Slot | TestimonialComponent | TextComponent

""""""
input ScheduledOperationConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: ScheduledOperationWhereUniqueInput!
}

"""A connection to a list of items."""
type ScheduledOperationConnection {
  """"""
  aggregate: Aggregate!

  """A list of edges."""
  edges: [ScheduledOperationEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

""""""
input ScheduledOperationCreateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [ScheduledOperationWhereUniqueInput!]
}

""""""
input ScheduledOperationCreateOneInlineInput {
  """Connect one existing ScheduledOperation document"""
  connect: ScheduledOperationWhereUniqueInput
}

"""An edge in a connection."""
type ScheduledOperationEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ScheduledOperation!
}

"""Identifies documents"""
input ScheduledOperationManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledOperationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledOperationWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledOperationWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not equal to given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String

  """"""
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String!]

  """All values that are not equal to given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  release: ScheduledReleaseWhereInput

  """"""
  status: ScheduledOperationStatus

  """All values that are contained in given list."""
  status_in: [ScheduledOperationStatus!]

  """All values that are not equal to given value."""
  status_not: ScheduledOperationStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledOperationStatus!]

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

""""""
enum ScheduledOperationOrderByInput {
  """"""
  createdAt_ASC

  """"""
  createdAt_DESC

  """"""
  description_ASC

  """"""
  description_DESC

  """"""
  errorMessage_ASC

  """"""
  errorMessage_DESC

  """"""
  id_ASC

  """"""
  id_DESC

  """"""
  publishedAt_ASC

  """"""
  publishedAt_DESC

  """"""
  status_ASC

  """"""
  status_DESC

  """"""
  updatedAt_ASC

  """"""
  updatedAt_DESC
}

"""System Scheduled Operation Status"""
enum ScheduledOperationStatus {
  """"""
  CANCELED

  """"""
  COMPLETED

  """"""
  FAILED

  """"""
  IN_PROGRESS

  """"""
  PENDING
}

""""""
input ScheduledOperationUpdateManyInlineInput {
  """Connect multiple existing ScheduledOperation documents"""
  connect: [ScheduledOperationConnectInput!]

  """Disconnect multiple ScheduledOperation documents"""
  disconnect: [ScheduledOperationWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ScheduledOperation documents
  """
  set: [ScheduledOperationWhereUniqueInput!]
}

""""""
input ScheduledOperationUpdateOneInlineInput {
  """Connect existing ScheduledOperation document"""
  connect: ScheduledOperationWhereUniqueInput

  """Disconnect currently connected ScheduledOperation document"""
  disconnect: Boolean
}

"""Identifies documents"""
input ScheduledOperationWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledOperationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledOperationWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledOperationWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not equal to given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String

  """"""
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String!]

  """All values that are not equal to given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  release: ScheduledReleaseWhereInput

  """"""
  status: ScheduledOperationStatus

  """All values that are contained in given list."""
  status_in: [ScheduledOperationStatus!]

  """All values that are not equal to given value."""
  status_not: ScheduledOperationStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledOperationStatus!]

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

"""References ScheduledOperation record uniquely"""
input ScheduledOperationWhereUniqueInput {
  """"""
  id: ID
}

"""Scheduled Release system model"""
type ScheduledRelease implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Release description"""
  description: String

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [ScheduledRelease!]!

  """Release error message"""
  errorMessage: String

  """The unique identifier"""
  id: ID!

  """Whether scheduled release should be run"""
  isActive: Boolean!

  """Whether scheduled release is implicit"""
  isImplicit: Boolean!

  """Operations to run with this release"""
  operations(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    orderBy: ScheduledOperationOrderByInput

    """"""
    skip: Int

    """"""
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Release date and time"""
  releaseAt: DateTime

  """System stage field"""
  stage: Stage!

  """Release Status"""
  status: ScheduledReleaseStatus!

  """Release Title"""
  title: String

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

""""""
input ScheduledReleaseConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: ScheduledReleaseWhereUniqueInput!
}

"""A connection to a list of items."""
type ScheduledReleaseConnection {
  """"""
  aggregate: Aggregate!

  """A list of edges."""
  edges: [ScheduledReleaseEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

""""""
input ScheduledReleaseCreateInput {
  """"""
  createdAt: DateTime

  """"""
  description: String

  """"""
  errorMessage: String

  """"""
  isActive: Boolean = true

  """"""
  releaseAt: DateTime

  """"""
  title: String

  """"""
  updatedAt: DateTime
}

""""""
input ScheduledReleaseCreateManyInlineInput {
  """Connect multiple existing ScheduledRelease documents"""
  connect: [ScheduledReleaseWhereUniqueInput!]

  """Create and connect multiple existing ScheduledRelease documents"""
  create: [ScheduledReleaseCreateInput!]
}

""""""
input ScheduledReleaseCreateOneInlineInput {
  """Connect one existing ScheduledRelease document"""
  connect: ScheduledReleaseWhereUniqueInput

  """Create and connect one ScheduledRelease document"""
  create: ScheduledReleaseCreateInput
}

"""An edge in a connection."""
type ScheduledReleaseEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: ScheduledRelease!
}

"""Identifies documents"""
input ScheduledReleaseManyWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledReleaseWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledReleaseWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledReleaseWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not equal to given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String

  """"""
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String!]

  """All values that are not equal to given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  isActive: Boolean

  """All values that are not equal to given value."""
  isActive_not: Boolean

  """"""
  isImplicit: Boolean

  """All values that are not equal to given value."""
  isImplicit_not: Boolean

  """"""
  operations_every: ScheduledOperationWhereInput

  """"""
  operations_none: ScheduledOperationWhereInput

  """"""
  operations_some: ScheduledOperationWhereInput

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  releaseAt: DateTime

  """All values greater than the given value."""
  releaseAt_gt: DateTime

  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime

  """All values that are contained in given list."""
  releaseAt_in: [DateTime!]

  """All values less than the given value."""
  releaseAt_lt: DateTime

  """All values less than or equal the given value."""
  releaseAt_lte: DateTime

  """All values that are not equal to given value."""
  releaseAt_not: DateTime

  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime!]

  """"""
  status: ScheduledReleaseStatus

  """All values that are contained in given list."""
  status_in: [ScheduledReleaseStatus!]

  """All values that are not equal to given value."""
  status_not: ScheduledReleaseStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledReleaseStatus!]

  """"""
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

""""""
enum ScheduledReleaseOrderByInput {
  """"""
  createdAt_ASC

  """"""
  createdAt_DESC

  """"""
  description_ASC

  """"""
  description_DESC

  """"""
  errorMessage_ASC

  """"""
  errorMessage_DESC

  """"""
  id_ASC

  """"""
  id_DESC

  """"""
  isActive_ASC

  """"""
  isActive_DESC

  """"""
  isImplicit_ASC

  """"""
  isImplicit_DESC

  """"""
  publishedAt_ASC

  """"""
  publishedAt_DESC

  """"""
  releaseAt_ASC

  """"""
  releaseAt_DESC

  """"""
  status_ASC

  """"""
  status_DESC

  """"""
  title_ASC

  """"""
  title_DESC

  """"""
  updatedAt_ASC

  """"""
  updatedAt_DESC
}

"""System Scheduled Release Status"""
enum ScheduledReleaseStatus {
  """"""
  COMPLETED

  """"""
  FAILED

  """"""
  IN_PROGRESS

  """"""
  PENDING
}

""""""
input ScheduledReleaseUpdateInput {
  """"""
  description: String

  """"""
  errorMessage: String

  """"""
  isActive: Boolean

  """"""
  releaseAt: DateTime

  """"""
  title: String
}

""""""
input ScheduledReleaseUpdateManyInlineInput {
  """Connect multiple existing ScheduledRelease documents"""
  connect: [ScheduledReleaseConnectInput!]

  """Create and connect multiple ScheduledRelease documents"""
  create: [ScheduledReleaseCreateInput!]

  """Delete multiple ScheduledRelease documents"""
  delete: [ScheduledReleaseWhereUniqueInput!]

  """Disconnect multiple ScheduledRelease documents"""
  disconnect: [ScheduledReleaseWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing ScheduledRelease documents
  """
  set: [ScheduledReleaseWhereUniqueInput!]

  """Update multiple ScheduledRelease documents"""
  update: [ScheduledReleaseUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple ScheduledRelease documents"""
  upsert: [ScheduledReleaseUpsertWithNestedWhereUniqueInput!]
}

""""""
input ScheduledReleaseUpdateManyInput {
  """"""
  description: String

  """"""
  errorMessage: String

  """"""
  isActive: Boolean

  """"""
  releaseAt: DateTime

  """"""
  title: String
}

""""""
input ScheduledReleaseUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: ScheduledReleaseUpdateManyInput!

  """Document search"""
  where: ScheduledReleaseWhereInput!
}

""""""
input ScheduledReleaseUpdateOneInlineInput {
  """Connect existing ScheduledRelease document"""
  connect: ScheduledReleaseWhereUniqueInput

  """Create and connect one ScheduledRelease document"""
  create: ScheduledReleaseCreateInput

  """Delete currently connected ScheduledRelease document"""
  delete: Boolean

  """Disconnect currently connected ScheduledRelease document"""
  disconnect: Boolean

  """Update single ScheduledRelease document"""
  update: ScheduledReleaseUpdateWithNestedWhereUniqueInput

  """Upsert single ScheduledRelease document"""
  upsert: ScheduledReleaseUpsertWithNestedWhereUniqueInput
}

""""""
input ScheduledReleaseUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: ScheduledReleaseUpdateInput!

  """Unique document search"""
  where: ScheduledReleaseWhereUniqueInput!
}

""""""
input ScheduledReleaseUpsertInput {
  """Create document if it didn't exist"""
  create: ScheduledReleaseCreateInput!

  """Update document if it exists"""
  update: ScheduledReleaseUpdateInput!
}

""""""
input ScheduledReleaseUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: ScheduledReleaseUpsertInput!

  """Unique document search"""
  where: ScheduledReleaseWhereUniqueInput!
}

"""Identifies documents"""
input ScheduledReleaseWhereInput {
  """Logical AND on all given filters."""
  AND: [ScheduledReleaseWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ScheduledReleaseWhereInput!]

  """Logical OR on all given filters."""
  OR: [ScheduledReleaseWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  description: String

  """All values containing the given string."""
  description_contains: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not equal to given value."""
  description_not: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values not ending with the given string"""
  description_not_ends_with: String

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values starting with the given string."""
  description_starts_with: String

  """"""
  errorMessage: String

  """All values containing the given string."""
  errorMessage_contains: String

  """All values ending with the given string."""
  errorMessage_ends_with: String

  """All values that are contained in given list."""
  errorMessage_in: [String!]

  """All values that are not equal to given value."""
  errorMessage_not: String

  """All values not containing the given string."""
  errorMessage_not_contains: String

  """All values not ending with the given string"""
  errorMessage_not_ends_with: String

  """All values that are not contained in given list."""
  errorMessage_not_in: [String!]

  """All values not starting with the given string."""
  errorMessage_not_starts_with: String

  """All values starting with the given string."""
  errorMessage_starts_with: String

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  isActive: Boolean

  """All values that are not equal to given value."""
  isActive_not: Boolean

  """"""
  isImplicit: Boolean

  """All values that are not equal to given value."""
  isImplicit_not: Boolean

  """"""
  operations_every: ScheduledOperationWhereInput

  """"""
  operations_none: ScheduledOperationWhereInput

  """"""
  operations_some: ScheduledOperationWhereInput

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  releaseAt: DateTime

  """All values greater than the given value."""
  releaseAt_gt: DateTime

  """All values greater than or equal the given value."""
  releaseAt_gte: DateTime

  """All values that are contained in given list."""
  releaseAt_in: [DateTime!]

  """All values less than the given value."""
  releaseAt_lt: DateTime

  """All values less than or equal the given value."""
  releaseAt_lte: DateTime

  """All values that are not equal to given value."""
  releaseAt_not: DateTime

  """All values that are not contained in given list."""
  releaseAt_not_in: [DateTime!]

  """"""
  status: ScheduledReleaseStatus

  """All values that are contained in given list."""
  status_in: [ScheduledReleaseStatus!]

  """All values that are not equal to given value."""
  status_not: ScheduledReleaseStatus

  """All values that are not contained in given list."""
  status_not_in: [ScheduledReleaseStatus!]

  """"""
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

"""References ScheduledRelease record uniquely"""
input ScheduledReleaseWhereUniqueInput {
  """"""
  id: ID
}

""""""
type Slot implements Node {
  """"""
  components(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `components` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    skip: Int
  ): [SlotComponents!]!

  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [Slot!]!

  """List of Slot versions"""
  history(
    """"""
    limit: Int! = 10

    """"""
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """"""
  scheduledIn(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    skip: Int

    """"""
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """System stage field"""
  stage: Stage!

  """"""
  title: String

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

""""""
union SlotComponents = BannerComponent | TestimonialComponent | TextComponent

""""""
input SlotComponentsConnectInput {
  """"""
  BannerComponent: BannerComponentConnectInput

  """"""
  TestimonialComponent: TestimonialComponentConnectInput

  """"""
  TextComponent: TextComponentConnectInput
}

""""""
input SlotComponentsCreateInput {
  """"""
  BannerComponent: BannerComponentCreateInput

  """"""
  TestimonialComponent: TestimonialComponentCreateInput

  """"""
  TextComponent: TextComponentCreateInput
}

""""""
input SlotComponentsCreateManyInlineInput {
  """Connect multiple existing SlotComponents documents"""
  connect: [SlotComponentsWhereUniqueInput!]

  """Create and connect multiple existing SlotComponents documents"""
  create: [SlotComponentsCreateInput!]
}

""""""
input SlotComponentsCreateOneInlineInput {
  """Connect one existing SlotComponents document"""
  connect: SlotComponentsWhereUniqueInput

  """Create and connect one SlotComponents document"""
  create: SlotComponentsCreateInput
}

""""""
input SlotComponentsUpdateInput {
  """"""
  BannerComponent: BannerComponentUpdateInput

  """"""
  TestimonialComponent: TestimonialComponentUpdateInput

  """"""
  TextComponent: TextComponentUpdateInput
}

""""""
input SlotComponentsUpdateManyInlineInput {
  """Connect multiple existing SlotComponents documents"""
  connect: [SlotComponentsConnectInput!]

  """Create and connect multiple SlotComponents documents"""
  create: [SlotComponentsCreateInput!]

  """Delete multiple SlotComponents documents"""
  delete: [SlotComponentsWhereUniqueInput!]

  """Disconnect multiple SlotComponents documents"""
  disconnect: [SlotComponentsWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing SlotComponents documents
  """
  set: [SlotComponentsWhereUniqueInput!]

  """Update multiple SlotComponents documents"""
  update: [SlotComponentsUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple SlotComponents documents"""
  upsert: [SlotComponentsUpsertWithNestedWhereUniqueInput!]
}

""""""
input SlotComponentsUpdateManyWithNestedWhereInput {
  """"""
  BannerComponent: BannerComponentUpdateManyWithNestedWhereInput

  """"""
  TestimonialComponent: TestimonialComponentUpdateManyWithNestedWhereInput

  """"""
  TextComponent: TextComponentUpdateManyWithNestedWhereInput
}

""""""
input SlotComponentsUpdateOneInlineInput {
  """Connect existing SlotComponents document"""
  connect: SlotComponentsWhereUniqueInput

  """Create and connect one SlotComponents document"""
  create: SlotComponentsCreateInput

  """Delete currently connected SlotComponents document"""
  delete: Boolean

  """Disconnect currently connected SlotComponents document"""
  disconnect: Boolean

  """Update single SlotComponents document"""
  update: SlotComponentsUpdateWithNestedWhereUniqueInput

  """Upsert single SlotComponents document"""
  upsert: SlotComponentsUpsertWithNestedWhereUniqueInput
}

""""""
input SlotComponentsUpdateWithNestedWhereUniqueInput {
  """"""
  BannerComponent: BannerComponentUpdateWithNestedWhereUniqueInput

  """"""
  TestimonialComponent: TestimonialComponentUpdateWithNestedWhereUniqueInput

  """"""
  TextComponent: TextComponentUpdateWithNestedWhereUniqueInput
}

""""""
input SlotComponentsUpsertWithNestedWhereUniqueInput {
  """"""
  BannerComponent: BannerComponentUpsertWithNestedWhereUniqueInput

  """"""
  TestimonialComponent: TestimonialComponentUpsertWithNestedWhereUniqueInput

  """"""
  TextComponent: TextComponentUpsertWithNestedWhereUniqueInput
}

""""""
input SlotComponentsWhereInput {
  """"""
  BannerComponent: BannerComponentWhereInput

  """"""
  TestimonialComponent: TestimonialComponentWhereInput

  """"""
  TextComponent: TextComponentWhereInput
}

""""""
input SlotComponentsWhereUniqueInput {
  """"""
  BannerComponent: BannerComponentWhereUniqueInput

  """"""
  TestimonialComponent: TestimonialComponentWhereUniqueInput

  """"""
  TextComponent: TextComponentWhereUniqueInput
}

""""""
input SlotConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: SlotWhereUniqueInput!
}

"""A connection to a list of items."""
type SlotConnection {
  """"""
  aggregate: Aggregate!

  """A list of edges."""
  edges: [SlotEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

""""""
input SlotCreateInput {
  """"""
  components: SlotComponentsCreateManyInlineInput

  """"""
  createdAt: DateTime

  """"""
  title: String

  """"""
  updatedAt: DateTime
}

""""""
input SlotCreateManyInlineInput {
  """Connect multiple existing Slot documents"""
  connect: [SlotWhereUniqueInput!]

  """Create and connect multiple existing Slot documents"""
  create: [SlotCreateInput!]
}

""""""
input SlotCreateOneInlineInput {
  """Connect one existing Slot document"""
  connect: SlotWhereUniqueInput

  """Create and connect one Slot document"""
  create: SlotCreateInput
}

"""An edge in a connection."""
type SlotEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Slot!
}

"""Identifies documents"""
input SlotManyWhereInput {
  """Logical AND on all given filters."""
  AND: [SlotWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SlotWhereInput!]

  """Logical OR on all given filters."""
  OR: [SlotWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  scheduledIn_every: ScheduledOperationWhereInput

  """"""
  scheduledIn_none: ScheduledOperationWhereInput

  """"""
  scheduledIn_some: ScheduledOperationWhereInput

  """"""
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

""""""
enum SlotOrderByInput {
  """"""
  createdAt_ASC

  """"""
  createdAt_DESC

  """"""
  id_ASC

  """"""
  id_DESC

  """"""
  publishedAt_ASC

  """"""
  publishedAt_DESC

  """"""
  title_ASC

  """"""
  title_DESC

  """"""
  updatedAt_ASC

  """"""
  updatedAt_DESC
}

""""""
input SlotUpdateInput {
  """"""
  components: SlotComponentsUpdateManyInlineInput

  """"""
  title: String
}

""""""
input SlotUpdateManyInlineInput {
  """Connect multiple existing Slot documents"""
  connect: [SlotConnectInput!]

  """Create and connect multiple Slot documents"""
  create: [SlotCreateInput!]

  """Delete multiple Slot documents"""
  delete: [SlotWhereUniqueInput!]

  """Disconnect multiple Slot documents"""
  disconnect: [SlotWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing Slot documents
  """
  set: [SlotWhereUniqueInput!]

  """Update multiple Slot documents"""
  update: [SlotUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple Slot documents"""
  upsert: [SlotUpsertWithNestedWhereUniqueInput!]
}

""""""
input SlotUpdateManyInput {
  """"""
  title: String
}

""""""
input SlotUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: SlotUpdateManyInput!

  """Document search"""
  where: SlotWhereInput!
}

""""""
input SlotUpdateOneInlineInput {
  """Connect existing Slot document"""
  connect: SlotWhereUniqueInput

  """Create and connect one Slot document"""
  create: SlotCreateInput

  """Delete currently connected Slot document"""
  delete: Boolean

  """Disconnect currently connected Slot document"""
  disconnect: Boolean

  """Update single Slot document"""
  update: SlotUpdateWithNestedWhereUniqueInput

  """Upsert single Slot document"""
  upsert: SlotUpsertWithNestedWhereUniqueInput
}

""""""
input SlotUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: SlotUpdateInput!

  """Unique document search"""
  where: SlotWhereUniqueInput!
}

""""""
input SlotUpsertInput {
  """Create document if it didn't exist"""
  create: SlotCreateInput!

  """Update document if it exists"""
  update: SlotUpdateInput!
}

""""""
input SlotUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: SlotUpsertInput!

  """Unique document search"""
  where: SlotWhereUniqueInput!
}

"""Identifies documents"""
input SlotWhereInput {
  """Logical AND on all given filters."""
  AND: [SlotWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SlotWhereInput!]

  """Logical OR on all given filters."""
  OR: [SlotWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  scheduledIn_every: ScheduledOperationWhereInput

  """"""
  scheduledIn_none: ScheduledOperationWhereInput

  """"""
  scheduledIn_some: ScheduledOperationWhereInput

  """"""
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

"""References Slot record uniquely"""
input SlotWhereUniqueInput {
  """"""
  id: ID
}

"""Stage system enumeration"""
enum Stage {
  """The Draft is the default stage for all your content."""
  DRAFT

  """The Published stage is where you can publish your content to."""
  PUBLISHED
}

""""""
enum SystemDateTimeFieldVariation {
  """"""
  BASE

  """"""
  COMBINED

  """"""
  LOCALIZATION
}

""""""
type TestimonialComponent implements Node {
  """"""
  avatar(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `avatar` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): Asset

  """"""
  body: String

  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [TestimonialComponent!]!

  """List of TestimonialComponent versions"""
  history(
    """"""
    limit: Int! = 10

    """"""
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """"""
  jobTitle: String

  """"""
  name: String

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """"""
  scheduledIn(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    skip: Int

    """"""
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """"""
  slots(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `slots` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    skip: Int

    """"""
    where: SlotWhereInput
  ): [Slot!]!

  """System stage field"""
  stage: Stage!

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

""""""
input TestimonialComponentConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: TestimonialComponentWhereUniqueInput!
}

"""A connection to a list of items."""
type TestimonialComponentConnection {
  """"""
  aggregate: Aggregate!

  """A list of edges."""
  edges: [TestimonialComponentEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

""""""
input TestimonialComponentCreateInput {
  """"""
  avatar: AssetCreateOneInlineInput

  """"""
  body: String

  """"""
  createdAt: DateTime

  """"""
  jobTitle: String

  """"""
  name: String

  """"""
  slots: SlotCreateManyInlineInput

  """"""
  updatedAt: DateTime
}

""""""
input TestimonialComponentCreateManyInlineInput {
  """Connect multiple existing TestimonialComponent documents"""
  connect: [TestimonialComponentWhereUniqueInput!]

  """Create and connect multiple existing TestimonialComponent documents"""
  create: [TestimonialComponentCreateInput!]
}

""""""
input TestimonialComponentCreateOneInlineInput {
  """Connect one existing TestimonialComponent document"""
  connect: TestimonialComponentWhereUniqueInput

  """Create and connect one TestimonialComponent document"""
  create: TestimonialComponentCreateInput
}

"""An edge in a connection."""
type TestimonialComponentEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: TestimonialComponent!
}

"""Identifies documents"""
input TestimonialComponentManyWhereInput {
  """Logical AND on all given filters."""
  AND: [TestimonialComponentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TestimonialComponentWhereInput!]

  """Logical OR on all given filters."""
  OR: [TestimonialComponentWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  avatar: AssetWhereInput

  """"""
  body: String

  """All values containing the given string."""
  body_contains: String

  """All values ending with the given string."""
  body_ends_with: String

  """All values that are contained in given list."""
  body_in: [String!]

  """All values that are not equal to given value."""
  body_not: String

  """All values not containing the given string."""
  body_not_contains: String

  """All values not ending with the given string"""
  body_not_ends_with: String

  """All values that are not contained in given list."""
  body_not_in: [String!]

  """All values not starting with the given string."""
  body_not_starts_with: String

  """All values starting with the given string."""
  body_starts_with: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  jobTitle: String

  """All values containing the given string."""
  jobTitle_contains: String

  """All values ending with the given string."""
  jobTitle_ends_with: String

  """All values that are contained in given list."""
  jobTitle_in: [String!]

  """All values that are not equal to given value."""
  jobTitle_not: String

  """All values not containing the given string."""
  jobTitle_not_contains: String

  """All values not ending with the given string"""
  jobTitle_not_ends_with: String

  """All values that are not contained in given list."""
  jobTitle_not_in: [String!]

  """All values not starting with the given string."""
  jobTitle_not_starts_with: String

  """All values starting with the given string."""
  jobTitle_starts_with: String

  """"""
  name: String

  """All values containing the given string."""
  name_contains: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not equal to given value."""
  name_not: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values not ending with the given string"""
  name_not_ends_with: String

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values starting with the given string."""
  name_starts_with: String

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  scheduledIn_every: ScheduledOperationWhereInput

  """"""
  scheduledIn_none: ScheduledOperationWhereInput

  """"""
  scheduledIn_some: ScheduledOperationWhereInput

  """"""
  slots_every: SlotWhereInput

  """"""
  slots_none: SlotWhereInput

  """"""
  slots_some: SlotWhereInput

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

""""""
enum TestimonialComponentOrderByInput {
  """"""
  body_ASC

  """"""
  body_DESC

  """"""
  createdAt_ASC

  """"""
  createdAt_DESC

  """"""
  id_ASC

  """"""
  id_DESC

  """"""
  jobTitle_ASC

  """"""
  jobTitle_DESC

  """"""
  name_ASC

  """"""
  name_DESC

  """"""
  publishedAt_ASC

  """"""
  publishedAt_DESC

  """"""
  updatedAt_ASC

  """"""
  updatedAt_DESC
}

""""""
input TestimonialComponentUpdateInput {
  """"""
  avatar: AssetUpdateOneInlineInput

  """"""
  body: String

  """"""
  jobTitle: String

  """"""
  name: String

  """"""
  slots: SlotUpdateManyInlineInput
}

""""""
input TestimonialComponentUpdateManyInlineInput {
  """Connect multiple existing TestimonialComponent documents"""
  connect: [TestimonialComponentConnectInput!]

  """Create and connect multiple TestimonialComponent documents"""
  create: [TestimonialComponentCreateInput!]

  """Delete multiple TestimonialComponent documents"""
  delete: [TestimonialComponentWhereUniqueInput!]

  """Disconnect multiple TestimonialComponent documents"""
  disconnect: [TestimonialComponentWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing TestimonialComponent documents
  """
  set: [TestimonialComponentWhereUniqueInput!]

  """Update multiple TestimonialComponent documents"""
  update: [TestimonialComponentUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple TestimonialComponent documents"""
  upsert: [TestimonialComponentUpsertWithNestedWhereUniqueInput!]
}

""""""
input TestimonialComponentUpdateManyInput {
  """"""
  body: String

  """"""
  jobTitle: String

  """"""
  name: String
}

""""""
input TestimonialComponentUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: TestimonialComponentUpdateManyInput!

  """Document search"""
  where: TestimonialComponentWhereInput!
}

""""""
input TestimonialComponentUpdateOneInlineInput {
  """Connect existing TestimonialComponent document"""
  connect: TestimonialComponentWhereUniqueInput

  """Create and connect one TestimonialComponent document"""
  create: TestimonialComponentCreateInput

  """Delete currently connected TestimonialComponent document"""
  delete: Boolean

  """Disconnect currently connected TestimonialComponent document"""
  disconnect: Boolean

  """Update single TestimonialComponent document"""
  update: TestimonialComponentUpdateWithNestedWhereUniqueInput

  """Upsert single TestimonialComponent document"""
  upsert: TestimonialComponentUpsertWithNestedWhereUniqueInput
}

""""""
input TestimonialComponentUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: TestimonialComponentUpdateInput!

  """Unique document search"""
  where: TestimonialComponentWhereUniqueInput!
}

""""""
input TestimonialComponentUpsertInput {
  """Create document if it didn't exist"""
  create: TestimonialComponentCreateInput!

  """Update document if it exists"""
  update: TestimonialComponentUpdateInput!
}

""""""
input TestimonialComponentUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: TestimonialComponentUpsertInput!

  """Unique document search"""
  where: TestimonialComponentWhereUniqueInput!
}

"""Identifies documents"""
input TestimonialComponentWhereInput {
  """Logical AND on all given filters."""
  AND: [TestimonialComponentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TestimonialComponentWhereInput!]

  """Logical OR on all given filters."""
  OR: [TestimonialComponentWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  avatar: AssetWhereInput

  """"""
  body: String

  """All values containing the given string."""
  body_contains: String

  """All values ending with the given string."""
  body_ends_with: String

  """All values that are contained in given list."""
  body_in: [String!]

  """All values that are not equal to given value."""
  body_not: String

  """All values not containing the given string."""
  body_not_contains: String

  """All values not ending with the given string"""
  body_not_ends_with: String

  """All values that are not contained in given list."""
  body_not_in: [String!]

  """All values not starting with the given string."""
  body_not_starts_with: String

  """All values starting with the given string."""
  body_starts_with: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  jobTitle: String

  """All values containing the given string."""
  jobTitle_contains: String

  """All values ending with the given string."""
  jobTitle_ends_with: String

  """All values that are contained in given list."""
  jobTitle_in: [String!]

  """All values that are not equal to given value."""
  jobTitle_not: String

  """All values not containing the given string."""
  jobTitle_not_contains: String

  """All values not ending with the given string"""
  jobTitle_not_ends_with: String

  """All values that are not contained in given list."""
  jobTitle_not_in: [String!]

  """All values not starting with the given string."""
  jobTitle_not_starts_with: String

  """All values starting with the given string."""
  jobTitle_starts_with: String

  """"""
  name: String

  """All values containing the given string."""
  name_contains: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not equal to given value."""
  name_not: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values not ending with the given string"""
  name_not_ends_with: String

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values starting with the given string."""
  name_starts_with: String

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  scheduledIn_every: ScheduledOperationWhereInput

  """"""
  scheduledIn_none: ScheduledOperationWhereInput

  """"""
  scheduledIn_some: ScheduledOperationWhereInput

  """"""
  slots_every: SlotWhereInput

  """"""
  slots_none: SlotWhereInput

  """"""
  slots_some: SlotWhereInput

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

"""References TestimonialComponent record uniquely"""
input TestimonialComponentWhereUniqueInput {
  """"""
  id: ID
}

""""""
type TextComponent implements Node {
  """"""
  body: String

  """The time the document was created"""
  createdAt: DateTime!

  """User that created this document"""
  createdBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [TextComponent!]!

  """List of TextComponent versions"""
  history(
    """"""
    limit: Int! = 10

    """"""
    skip: Int! = 0

    """
    This is optional and can be used to fetch the document version history for a specific stage instead of the current one
    """
    stageOverride: Stage
  ): [Version!]!

  """The unique identifier"""
  id: ID!

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """User that last published this document"""
  publishedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User

  """"""
  scheduledIn(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    skip: Int

    """"""
    where: ScheduledOperationWhereInput
  ): [ScheduledOperation!]!

  """"""
  slots(
    """"""
    after: String

    """"""
    before: String

    """"""
    first: Int

    """"""
    last: Int

    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `slots` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]

    """"""
    skip: Int

    """"""
    where: SlotWhereInput
  ): [Slot!]!

  """System stage field"""
  stage: Stage!

  """"""
  title: String

  """The time the document was updated"""
  updatedAt: DateTime!

  """User that last updated this document"""
  updatedBy(
    """
    Allows to optionally override locale filtering behaviour in the query's subtree.
    
    Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
    For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.
    
    This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
    """
    locales: [Locale!]
  ): User
}

""""""
input TextComponentConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: TextComponentWhereUniqueInput!
}

"""A connection to a list of items."""
type TextComponentConnection {
  """"""
  aggregate: Aggregate!

  """A list of edges."""
  edges: [TextComponentEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

""""""
input TextComponentCreateInput {
  """"""
  body: String

  """"""
  createdAt: DateTime

  """"""
  slots: SlotCreateManyInlineInput

  """"""
  title: String

  """"""
  updatedAt: DateTime
}

""""""
input TextComponentCreateManyInlineInput {
  """Connect multiple existing TextComponent documents"""
  connect: [TextComponentWhereUniqueInput!]

  """Create and connect multiple existing TextComponent documents"""
  create: [TextComponentCreateInput!]
}

""""""
input TextComponentCreateOneInlineInput {
  """Connect one existing TextComponent document"""
  connect: TextComponentWhereUniqueInput

  """Create and connect one TextComponent document"""
  create: TextComponentCreateInput
}

"""An edge in a connection."""
type TextComponentEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: TextComponent!
}

"""Identifies documents"""
input TextComponentManyWhereInput {
  """Logical AND on all given filters."""
  AND: [TextComponentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TextComponentWhereInput!]

  """Logical OR on all given filters."""
  OR: [TextComponentWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  body: String

  """All values containing the given string."""
  body_contains: String

  """All values ending with the given string."""
  body_ends_with: String

  """All values that are contained in given list."""
  body_in: [String!]

  """All values that are not equal to given value."""
  body_not: String

  """All values not containing the given string."""
  body_not_contains: String

  """All values not ending with the given string"""
  body_not_ends_with: String

  """All values that are not contained in given list."""
  body_not_in: [String!]

  """All values not starting with the given string."""
  body_not_starts_with: String

  """All values starting with the given string."""
  body_starts_with: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  scheduledIn_every: ScheduledOperationWhereInput

  """"""
  scheduledIn_none: ScheduledOperationWhereInput

  """"""
  scheduledIn_some: ScheduledOperationWhereInput

  """"""
  slots_every: SlotWhereInput

  """"""
  slots_none: SlotWhereInput

  """"""
  slots_some: SlotWhereInput

  """"""
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

""""""
enum TextComponentOrderByInput {
  """"""
  body_ASC

  """"""
  body_DESC

  """"""
  createdAt_ASC

  """"""
  createdAt_DESC

  """"""
  id_ASC

  """"""
  id_DESC

  """"""
  publishedAt_ASC

  """"""
  publishedAt_DESC

  """"""
  title_ASC

  """"""
  title_DESC

  """"""
  updatedAt_ASC

  """"""
  updatedAt_DESC
}

""""""
input TextComponentUpdateInput {
  """"""
  body: String

  """"""
  slots: SlotUpdateManyInlineInput

  """"""
  title: String
}

""""""
input TextComponentUpdateManyInlineInput {
  """Connect multiple existing TextComponent documents"""
  connect: [TextComponentConnectInput!]

  """Create and connect multiple TextComponent documents"""
  create: [TextComponentCreateInput!]

  """Delete multiple TextComponent documents"""
  delete: [TextComponentWhereUniqueInput!]

  """Disconnect multiple TextComponent documents"""
  disconnect: [TextComponentWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing TextComponent documents
  """
  set: [TextComponentWhereUniqueInput!]

  """Update multiple TextComponent documents"""
  update: [TextComponentUpdateWithNestedWhereUniqueInput!]

  """Upsert multiple TextComponent documents"""
  upsert: [TextComponentUpsertWithNestedWhereUniqueInput!]
}

""""""
input TextComponentUpdateManyInput {
  """"""
  body: String

  """"""
  title: String
}

""""""
input TextComponentUpdateManyWithNestedWhereInput {
  """Update many input"""
  data: TextComponentUpdateManyInput!

  """Document search"""
  where: TextComponentWhereInput!
}

""""""
input TextComponentUpdateOneInlineInput {
  """Connect existing TextComponent document"""
  connect: TextComponentWhereUniqueInput

  """Create and connect one TextComponent document"""
  create: TextComponentCreateInput

  """Delete currently connected TextComponent document"""
  delete: Boolean

  """Disconnect currently connected TextComponent document"""
  disconnect: Boolean

  """Update single TextComponent document"""
  update: TextComponentUpdateWithNestedWhereUniqueInput

  """Upsert single TextComponent document"""
  upsert: TextComponentUpsertWithNestedWhereUniqueInput
}

""""""
input TextComponentUpdateWithNestedWhereUniqueInput {
  """Document to update"""
  data: TextComponentUpdateInput!

  """Unique document search"""
  where: TextComponentWhereUniqueInput!
}

""""""
input TextComponentUpsertInput {
  """Create document if it didn't exist"""
  create: TextComponentCreateInput!

  """Update document if it exists"""
  update: TextComponentUpdateInput!
}

""""""
input TextComponentUpsertWithNestedWhereUniqueInput {
  """Upsert data"""
  data: TextComponentUpsertInput!

  """Unique document search"""
  where: TextComponentWhereUniqueInput!
}

"""Identifies documents"""
input TextComponentWhereInput {
  """Logical AND on all given filters."""
  AND: [TextComponentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TextComponentWhereInput!]

  """Logical OR on all given filters."""
  OR: [TextComponentWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  body: String

  """All values containing the given string."""
  body_contains: String

  """All values ending with the given string."""
  body_ends_with: String

  """All values that are contained in given list."""
  body_in: [String!]

  """All values that are not equal to given value."""
  body_not: String

  """All values not containing the given string."""
  body_not_contains: String

  """All values not ending with the given string"""
  body_not_ends_with: String

  """All values that are not contained in given list."""
  body_not_in: [String!]

  """All values not starting with the given string."""
  body_not_starts_with: String

  """All values starting with the given string."""
  body_starts_with: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  createdBy: UserWhereInput

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  publishedBy: UserWhereInput

  """"""
  scheduledIn_every: ScheduledOperationWhereInput

  """"""
  scheduledIn_none: ScheduledOperationWhereInput

  """"""
  scheduledIn_some: ScheduledOperationWhereInput

  """"""
  slots_every: SlotWhereInput

  """"""
  slots_none: SlotWhereInput

  """"""
  slots_some: SlotWhereInput

  """"""
  title: String

  """All values containing the given string."""
  title_contains: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not equal to given value."""
  title_not: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values not ending with the given string"""
  title_not_ends_with: String

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values starting with the given string."""
  title_starts_with: String

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """"""
  updatedBy: UserWhereInput
}

"""References TextComponent record uniquely"""
input TextComponentWhereUniqueInput {
  """"""
  id: ID
}

""""""
input UnpublishLocaleInput {
  """Locales to unpublish"""
  locale: Locale!

  """Stages to unpublish selected locales from"""
  stages: [Stage!]!
}

"""User system model"""
type User implements Node {
  """The time the document was created"""
  createdAt: DateTime!

  """Get the document in other stages"""
  documentInStages(
    """Decides if the current stage should be included or not"""
    includeCurrent: Boolean! = false

    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false

    """Potential stages that should be returned"""
    stages: [Stage!]! = [DRAFT, PUBLISHED]
  ): [User!]!

  """The unique identifier"""
  id: ID!

  """Flag to determine if user is active or not"""
  isActive: Boolean!

  """User Kind. Can be either MEMBER, PAT or PUBLIC"""
  kind: UserKind!

  """The username"""
  name: String!

  """Profile Picture url"""
  picture: String

  """The time the document was published. Null on documents in draft stage."""
  publishedAt: DateTime

  """System stage field"""
  stage: Stage!

  """The time the document was updated"""
  updatedAt: DateTime!
}

""""""
input UserConnectInput {
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput

  """Document to connect"""
  where: UserWhereUniqueInput!
}

"""A connection to a list of items."""
type UserConnection {
  """"""
  aggregate: Aggregate!

  """A list of edges."""
  edges: [UserEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

""""""
input UserCreateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserWhereUniqueInput!]
}

""""""
input UserCreateOneInlineInput {
  """Connect one existing User document"""
  connect: UserWhereUniqueInput
}

"""An edge in a connection."""
type UserEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: User!
}

"""System User Kind"""
enum UserKind {
  """"""
  MEMBER

  """"""
  PAT

  """"""
  PUBLIC

  """"""
  WEBHOOK
}

"""Identifies documents"""
input UserManyWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  isActive: Boolean

  """All values that are not equal to given value."""
  isActive_not: Boolean

  """"""
  kind: UserKind

  """All values that are contained in given list."""
  kind_in: [UserKind!]

  """All values that are not equal to given value."""
  kind_not: UserKind

  """All values that are not contained in given list."""
  kind_not_in: [UserKind!]

  """"""
  name: String

  """All values containing the given string."""
  name_contains: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not equal to given value."""
  name_not: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values not ending with the given string"""
  name_not_ends_with: String

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values starting with the given string."""
  name_starts_with: String

  """"""
  picture: String

  """All values containing the given string."""
  picture_contains: String

  """All values ending with the given string."""
  picture_ends_with: String

  """All values that are contained in given list."""
  picture_in: [String!]

  """All values that are not equal to given value."""
  picture_not: String

  """All values not containing the given string."""
  picture_not_contains: String

  """All values not ending with the given string"""
  picture_not_ends_with: String

  """All values that are not contained in given list."""
  picture_not_in: [String!]

  """All values not starting with the given string."""
  picture_not_starts_with: String

  """All values starting with the given string."""
  picture_starts_with: String

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
}

""""""
enum UserOrderByInput {
  """"""
  createdAt_ASC

  """"""
  createdAt_DESC

  """"""
  id_ASC

  """"""
  id_DESC

  """"""
  isActive_ASC

  """"""
  isActive_DESC

  """"""
  kind_ASC

  """"""
  kind_DESC

  """"""
  name_ASC

  """"""
  name_DESC

  """"""
  picture_ASC

  """"""
  picture_DESC

  """"""
  publishedAt_ASC

  """"""
  publishedAt_DESC

  """"""
  updatedAt_ASC

  """"""
  updatedAt_DESC
}

""""""
input UserUpdateManyInlineInput {
  """Connect multiple existing User documents"""
  connect: [UserConnectInput!]

  """Disconnect multiple User documents"""
  disconnect: [UserWhereUniqueInput!]

  """
  Override currently-connected documents with multiple existing User documents
  """
  set: [UserWhereUniqueInput!]
}

""""""
input UserUpdateOneInlineInput {
  """Connect existing User document"""
  connect: UserWhereUniqueInput

  """Disconnect currently connected User document"""
  disconnect: Boolean
}

"""Identifies documents"""
input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Contains search across all appropriate fields."""
  _search: String

  """"""
  createdAt: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """"""
  id: ID

  """All values containing the given string."""
  id_contains: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not equal to given value."""
  id_not: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values not ending with the given string"""
  id_not_ends_with: ID

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """"""
  isActive: Boolean

  """All values that are not equal to given value."""
  isActive_not: Boolean

  """"""
  kind: UserKind

  """All values that are contained in given list."""
  kind_in: [UserKind!]

  """All values that are not equal to given value."""
  kind_not: UserKind

  """All values that are not contained in given list."""
  kind_not_in: [UserKind!]

  """"""
  name: String

  """All values containing the given string."""
  name_contains: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not equal to given value."""
  name_not: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values not ending with the given string"""
  name_not_ends_with: String

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values starting with the given string."""
  name_starts_with: String

  """"""
  picture: String

  """All values containing the given string."""
  picture_contains: String

  """All values ending with the given string."""
  picture_ends_with: String

  """All values that are contained in given list."""
  picture_in: [String!]

  """All values that are not equal to given value."""
  picture_not: String

  """All values not containing the given string."""
  picture_not_contains: String

  """All values not ending with the given string"""
  picture_not_ends_with: String

  """All values that are not contained in given list."""
  picture_not_in: [String!]

  """All values not starting with the given string."""
  picture_not_starts_with: String

  """All values starting with the given string."""
  picture_starts_with: String

  """"""
  publishedAt: DateTime

  """All values greater than the given value."""
  publishedAt_gt: DateTime

  """All values greater than or equal the given value."""
  publishedAt_gte: DateTime

  """All values that are contained in given list."""
  publishedAt_in: [DateTime!]

  """All values less than the given value."""
  publishedAt_lt: DateTime

  """All values less than or equal the given value."""
  publishedAt_lte: DateTime

  """All values that are not equal to given value."""
  publishedAt_not: DateTime

  """All values that are not contained in given list."""
  publishedAt_not_in: [DateTime!]

  """"""
  updatedAt: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]
}

"""References User record uniquely"""
input UserWhereUniqueInput {
  """"""
  id: ID
}

""""""
type Version {
  """"""
  createdAt: DateTime!

  """"""
  id: ID!

  """"""
  revision: Int!

  """"""
  stage: Stage!
}

""""""
input VersionWhereInput {
  """"""
  id: ID!

  """"""
  revision: Int!

  """"""
  stage: Stage!
}

""""""
enum _FilterKind {
  """"""
  AND

  """"""
  NOT

  """"""
  OR

  """"""
  contains

  """"""
  contains_all

  """"""
  contains_none

  """"""
  contains_some

  """"""
  ends_with

  """"""
  eq

  """"""
  eq_not

  """"""
  gt

  """"""
  gte

  """"""
  in

  """"""
  lt

  """"""
  lte

  """"""
  not_contains

  """"""
  not_ends_with

  """"""
  not_in

  """"""
  not_starts_with

  """"""
  relational_every

  """"""
  relational_none

  """"""
  relational_single

  """"""
  relational_some

  """"""
  search

  """"""
  starts_with
}

""""""
enum _MutationInputFieldKind {
  """"""
  enum

  """"""
  relation

  """"""
  richText

  """"""
  richTextWithEmbeds

  """"""
  scalar

  """"""
  union

  """"""
  virtual
}

""""""
enum _MutationKind {
  """"""
  create

  """"""
  delete

  """"""
  deleteMany

  """"""
  publish

  """"""
  publishMany

  """"""
  unpublish

  """"""
  unpublishMany

  """"""
  update

  """"""
  updateMany

  """"""
  upsert
}

""""""
enum _OrderDirection {
  """"""
  asc

  """"""
  desc
}

""""""
enum _RelationInputCardinality {
  """"""
  many

  """"""
  one
}

""""""
enum _RelationInputKind {
  """"""
  create

  """"""
  update
}

""""""
enum _RelationKind {
  """"""
  regular

  """"""
  union
}

""""""
enum _SystemDateTimeFieldVariation {
  """"""
  base

  """"""
  combined

  """"""
  localization
}
